{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\CASE-STUDY-FRONTEND\\\\E-Commerce-App\\\\src\\\\components\\\\EditProduct.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './ecommerce.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditProduct = () => {\n  _s();\n  const [product, setProduct] = useState({\n    barcode: '',\n    description: '',\n    price: '',\n    quantity: '',\n    category: ''\n  });\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const response = await fetch(`/api/products/${id}`);\n        if (!response.ok) throw new Error('Error fetching product');\n        const data = await response.json();\n        setProduct(data.data);\n      } catch (error) {\n        console.error('Error fetching product:', error);\n      }\n    };\n    fetchProduct();\n  }, [id]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProduct(prevProduct => ({\n      ...prevProduct,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`/api/products/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(product)\n      });\n      if (!response.ok) throw new Error('Error updating product');\n      alert('Product updated successfully!');\n      navigate('/view-products');\n    } catch (error) {\n      console.error('Error updating product:', error);\n      alert('Failed to update product.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(EditProduct, \"xZzVlkNeOk4DgAPQ1mz+ReJaYmA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditProduct;\nexport default EditProduct;\nvar _c;\n$RefreshReg$(_c, \"EditProduct\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","Container","useParams","useNavigate","jsxDEV","_jsxDEV","EditProduct","_s","product","setProduct","barcode","description","price","quantity","category","id","navigate","fetchProduct","response","fetch","ok","Error","data","json","error","console","handleChange","e","name","value","target","prevProduct","handleSubmit","preventDefault","method","headers","body","JSON","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","variant","type","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/CASE-STUDY-FRONTEND/E-Commerce-App/src/components/EditProduct.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './ecommerce.css';\r\n\r\nconst EditProduct = () => {\r\n  const [product, setProduct] = useState({\r\n    barcode: '',\r\n    description: '',\r\n    price: '',\r\n    quantity: '',\r\n    category: '',\r\n  });\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchProduct = async () => {\r\n      try {\r\n        const response = await fetch(`/api/products/${id}`);\r\n        if (!response.ok) throw new Error('Error fetching product');\r\n        const data = await response.json();\r\n        setProduct(data.data);\r\n      } catch (error) {\r\n        console.error('Error fetching product:', error);\r\n      }\r\n    };\r\n\r\n    fetchProduct();\r\n  }, [id]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setProduct((prevProduct) => ({ ...prevProduct, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(`/api/products/${id}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(product),\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Error updating product');\r\n      \r\n      alert('Product updated successfully!');\r\n      navigate('/view-products');\r\n    } catch (error) {\r\n      console.error('Error updating product:', error);\r\n      alert('Failed to update product.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Edit Product</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        {/* Fields for barcode, description, price, quantity, category */}\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Update Product\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditProduct;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}